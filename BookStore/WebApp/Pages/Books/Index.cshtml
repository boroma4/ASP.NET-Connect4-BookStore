@page
@using Microsoft.AspNetCore.SignalR.Protocol
@model WebApp.Pages.Books.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Boggo's bookstore</h1>

<p>
    <a asp-page="Create">Add new book</a>
</p>

<form class="form-inline" method="get">
    <select class="form-control" name="type" asp-for="@Model.Type">
              <option value="Title">@Html.DisplayNameFor(model => model.Book[0].Title)</option>
              <option value="Author">@Html.DisplayNameFor(model => model.Book[0].BookAuthors)</option>
              <option value="Publisher">@Html.DisplayNameFor(model => model.Book[0].Publisher)</option>
        </select>
    <div class="form-group">
        <!-- weird hack with value="" -->
        <input asp-for="Search" value="@Model.Search" class="form-control"/>
    </div>
    <div class="form-group">
        <input type="submit" value="Search" class="btn btn-primary"/>
        <input type="submit" value="Reset" name="ToDoActionReset" class="btn btn-secondary"
               @(string.IsNullOrWhiteSpace(Model.Search) ? "disabled=\"disabled\"" : "")/>
    </div>
</form>
<div style="margin-top: 7px">
    @if (!string.IsNullOrWhiteSpace(Model.Search))
    {
        <p>Search type: by @Model.Type | Search term: @Model.Search</p>
    }
    <p>Records: @Model.Books.Count / @Model.Total</p>
</div>


<div class="row">

    @foreach (var item in Model.Books)
    {
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
            <div class="card">

                <div class="card-header">
                    <strong> @Html.DisplayFor(modelItem => item.Book.Title)</strong>
                </div>
                <div class="card-body">
                    @foreach (var author in item.Book.BookAuthors)
                        {
                            <div>
                                <strong>By:</strong> 
                                @author.Author.FirstLastName
                                @if (item.Book.BookAuthors.Count > 1)
                                {
                                    <div>
                                    and
                                    <a asp-page = "./Details" asp-route-id = "@item.Book.BookId">
                                        others
                                    </a >
                                    </div>
                                }
                            </div>
                            break;
                        }
                    
                    <div>
                        @if (!string.IsNullOrEmpty(item.Book.Summary))
                        {
                            @if (item.Book.Summary.Length < 30)
                            {
                                <p class="card-text">
                                    <strong>Summary</strong> : @Html.DisplayFor(modelItem => item.Book.Summary)
                                </p>
                            }
                            else
                            {
                                <p class="card-text">
                                    <strong>Summary </strong>: @item.Book.Summary.Substring(0, 27)
                                    <a asp-page = "./Details" asp-route-id = "@item.Book.BookId">...</a>
                                </p>
                            }
                        }
                    </div>

                    <a asp-page="./Edit" asp-route-id="@item.Book.BookId" class="card-link">Edit</a>
                    <a asp-page="./Details" asp-route-id="@item.Book.BookId" class="card-link">Details</a>
                    <a asp-page="./Delete" asp-route-id="@item.Book.BookId" class="card-link">Delete</a>
                    <a asp-page="/Comments/index" asp-route-bookId="@item.Book.BookId">
                        <button type="button" class="btn btn-primary">
                            Comments <span class="badge badge-light">@item.CommentCount</span>
                        </button>
                    </a>
                </div>
            </div>
        </div>
    }

</div>
