@page
@model WebApp.Pages_Books.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get" class="form-inline">
    <select class="form-control" value="type" >
          <option>@Html.DisplayNameFor(model => model.Book[0].Title)</option>
          <option>@Html.DisplayNameFor(model => model.Book[0].BookAuthors)</option>
          <option>@Html.DisplayNameFor(model => model.Book[0].Publisher)</option>
    </select>
    <div class="form-group" style="margin-left: 5px">
        <input asp-for="Search" value="@Model.Search" class="form-control"/>
    </div>
    <div class="form-group">
        <input style="margin-left: 5px" type="submit" value="Search" class="btn btn-primary"/>
        <input style="margin-left: 5px" type="submit" value="Reset" name="action" class="btn btn-secondary"
                       @(string.IsNullOrWhiteSpace(Model.Search) ? "disabled=\"disabled\"" : "")/>

    </div>
</form>

    <p style="margin-top: 5px">Records: @Model.Book.Count</p>

<div style="height: 10px"></div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Summary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].PublishingYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].AuthoredYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].WordCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].BookAuthors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Comments)
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublishingYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthoredYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WordCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Language.LanguageName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher.PublisherName)
            </td>
            <td>
                @foreach (var ba in item.BookAuthors)
                {
                    <p> @Html.DisplayFor(modelItem => ba.Author.FirstLastName)</p>
                }
            </td>
            <td>
                <p>Comments: @item.Comments.Count</p>
                @foreach (var comment in item.Comments.OrderByDescending(c => c.CommentId).Take(1))
                {
                    <p>Last comment: @Html.DisplayFor(modelItem => comment.CommentText)</p>
                }
                <a asp-page="/Comments/Index" asp-route-bookId="@item.BookId">Read all</a>
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.BookId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.BookId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.BookId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
